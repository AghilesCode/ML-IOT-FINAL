# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import file_pb2 as file__pb2


class MonServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DireBonjour = channel.unary_unary(
                '/monprojetgrpc.MonService/DireBonjour',
                request_serializer=file__pb2.MessageBonjour.SerializeToString,
                response_deserializer=file__pb2.ReponseBonjour.FromString,
                )
        self.RecupererCoordonnees = channel.unary_unary(
                '/monprojetgrpc.MonService/RecupererCoordonnees',
                request_serializer=file__pb2.Coordonnees.SerializeToString,
                response_deserializer=file__pb2.ReponseCoordonnees.FromString,
                )
        self.UploadImage = channel.stream_unary(
                '/monprojetgrpc.MonService/UploadImage',
                request_serializer=file__pb2.ImageChunk.SerializeToString,
                response_deserializer=file__pb2.UploadStatus.FromString,
                )
        self.StreamAudio = channel.stream_unary(
                '/monprojetgrpc.MonService/StreamAudio',
                request_serializer=file__pb2.AudioChunk.SerializeToString,
                response_deserializer=file__pb2.UploadStatus.FromString,
                )
        self.UploadFile = channel.unary_unary(
                '/monprojetgrpc.MonService/UploadFile',
                request_serializer=file__pb2.FileRequest.SerializeToString,
                response_deserializer=file__pb2.UploadStatus.FromString,
                )


class MonServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DireBonjour(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecupererCoordonnees(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadImage(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamAudio(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MonServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DireBonjour': grpc.unary_unary_rpc_method_handler(
                    servicer.DireBonjour,
                    request_deserializer=file__pb2.MessageBonjour.FromString,
                    response_serializer=file__pb2.ReponseBonjour.SerializeToString,
            ),
            'RecupererCoordonnees': grpc.unary_unary_rpc_method_handler(
                    servicer.RecupererCoordonnees,
                    request_deserializer=file__pb2.Coordonnees.FromString,
                    response_serializer=file__pb2.ReponseCoordonnees.SerializeToString,
            ),
            'UploadImage': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadImage,
                    request_deserializer=file__pb2.ImageChunk.FromString,
                    response_serializer=file__pb2.UploadStatus.SerializeToString,
            ),
            'StreamAudio': grpc.stream_unary_rpc_method_handler(
                    servicer.StreamAudio,
                    request_deserializer=file__pb2.AudioChunk.FromString,
                    response_serializer=file__pb2.UploadStatus.SerializeToString,
            ),
            'UploadFile': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadFile,
                    request_deserializer=file__pb2.FileRequest.FromString,
                    response_serializer=file__pb2.UploadStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'monprojetgrpc.MonService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MonService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DireBonjour(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/monprojetgrpc.MonService/DireBonjour',
            file__pb2.MessageBonjour.SerializeToString,
            file__pb2.ReponseBonjour.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecupererCoordonnees(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/monprojetgrpc.MonService/RecupererCoordonnees',
            file__pb2.Coordonnees.SerializeToString,
            file__pb2.ReponseCoordonnees.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadImage(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/monprojetgrpc.MonService/UploadImage',
            file__pb2.ImageChunk.SerializeToString,
            file__pb2.UploadStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamAudio(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/monprojetgrpc.MonService/StreamAudio',
            file__pb2.AudioChunk.SerializeToString,
            file__pb2.UploadStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/monprojetgrpc.MonService/UploadFile',
            file__pb2.FileRequest.SerializeToString,
            file__pb2.UploadStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
